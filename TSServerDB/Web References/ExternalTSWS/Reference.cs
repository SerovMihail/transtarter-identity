//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TSServerDB.ExternalTSWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tstarter.ru/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindNumberInCrossOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindInGoodsRestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindInDocStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCartNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFromCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDaysOfReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalansOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcPartnerBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestDaysOfReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TempOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMakerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEngineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplicationComponentByCrossGroupIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrossCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplicationComponentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShowUnitApplicationEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCartCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserViewSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForthcomingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveForthcomingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForthcomingReserveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteForthcomingReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplicationComponentForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplicationComponentByCrossGroupIDForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMakerListForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModelListForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEngineListForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindApplicationForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindComponentsForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesCountForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageByNumberForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindNumberForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindNumberInCrossForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrossCommentForExternalCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalMNDListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::TSServerDB.Properties.Settings.Default.TSServerDB_ExternalTSWS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetUserCompletedEventHandler SetUserCompleted;
        
        /// <remarks/>
        public event GetAccessAttributeCompletedEventHandler GetAccessAttributeCompleted;
        
        /// <remarks/>
        public event FindNumberInCrossCompletedEventHandler FindNumberInCrossCompleted;
        
        /// <remarks/>
        public event FindNumberCompletedEventHandler FindNumberCompleted;
        
        /// <remarks/>
        public event FindInGoodsRestCompletedEventHandler FindInGoodsRestCompleted;
        
        /// <remarks/>
        public event FindInDocStrCompletedEventHandler FindInDocStrCompleted;
        
        /// <remarks/>
        public event GetCartEnabledCompletedEventHandler GetCartEnabledCompleted;
        
        /// <remarks/>
        public event GetCartCompletedEventHandler GetCartCompleted;
        
        /// <remarks/>
        public event AddToCartCompletedEventHandler AddToCartCompleted;
        
        /// <remarks/>
        public event AddToCartNewCompletedEventHandler AddToCartNewCompleted;
        
        /// <remarks/>
        public event DeleteFromCartCompletedEventHandler DeleteFromCartCompleted;
        
        /// <remarks/>
        public event OrderCreateCompletedEventHandler OrderCreateCompleted;
        
        /// <remarks/>
        public event GetCurrencyRateCompletedEventHandler GetCurrencyRateCompleted;
        
        /// <remarks/>
        public event GetCurrencyCompletedEventHandler GetCurrencyCompleted;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event GetCurrentDateCompletedEventHandler GetCurrentDateCompleted;
        
        /// <remarks/>
        public event GetOrdersCompletedEventHandler GetOrdersCompleted;
        
        /// <remarks/>
        public event GetDaysOfReserveCompletedEventHandler GetDaysOfReserveCompleted;
        
        /// <remarks/>
        public event GetBalansCompletedEventHandler GetBalansCompleted;
        
        /// <remarks/>
        public event CalcPartnerBalanceCompletedEventHandler CalcPartnerBalanceCompleted;
        
        /// <remarks/>
        public event RestCreditCompletedEventHandler RestCreditCompleted;
        
        /// <remarks/>
        public event RestDaysOfReserveCompletedEventHandler RestDaysOfReserveCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event TempCompletedEventHandler TempCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event GetMakerListCompletedEventHandler GetMakerListCompleted;
        
        /// <remarks/>
        public event GetModelListCompletedEventHandler GetModelListCompleted;
        
        /// <remarks/>
        public event GetEngineListCompletedEventHandler GetEngineListCompleted;
        
        /// <remarks/>
        public event GetApplicationCompletedEventHandler GetApplicationCompleted;
        
        /// <remarks/>
        public event FindApplicationCompletedEventHandler FindApplicationCompleted;
        
        /// <remarks/>
        public event ApplicationComponentByCrossGroupIDCompletedEventHandler ApplicationComponentByCrossGroupIDCompleted;
        
        /// <remarks/>
        public event FindComponentsCompletedEventHandler FindComponentsCompleted;
        
        /// <remarks/>
        public event GetImagesCompletedEventHandler GetImagesCompleted;
        
        /// <remarks/>
        public event GetImageByNumberCompletedEventHandler GetImageByNumberCompleted;
        
        /// <remarks/>
        public event GetImagesCountCompletedEventHandler GetImagesCountCompleted;
        
        /// <remarks/>
        public event GetCrossCommentCompletedEventHandler GetCrossCommentCompleted;
        
        /// <remarks/>
        public event ApplicationComponentCompletedEventHandler ApplicationComponentCompleted;
        
        /// <remarks/>
        public event GetShowUnitApplicationEnabledCompletedEventHandler GetShowUnitApplicationEnabledCompleted;
        
        /// <remarks/>
        public event UpdateCartCommentCompletedEventHandler UpdateCartCommentCompleted;
        
        /// <remarks/>
        public event GetCartCommentsCompletedEventHandler GetCartCommentsCompleted;
        
        /// <remarks/>
        public event GetOrderCommentsCompletedEventHandler GetOrderCommentsCompleted;
        
        /// <remarks/>
        public event UpdateUserViewSettingsCompletedEventHandler UpdateUserViewSettingsCompleted;
        
        /// <remarks/>
        public event GetForthcomingInfoCompletedEventHandler GetForthcomingInfoCompleted;
        
        /// <remarks/>
        public event ReserveForthcomingCompletedEventHandler ReserveForthcomingCompleted;
        
        /// <remarks/>
        public event GetForthcomingReserveInfoCompletedEventHandler GetForthcomingReserveInfoCompleted;
        
        /// <remarks/>
        public event DeleteForthcomingReserveCompletedEventHandler DeleteForthcomingReserveCompleted;
        
        /// <remarks/>
        public event SetForOrderCompletedEventHandler SetForOrderCompleted;
        
        /// <remarks/>
        public event ApplicationComponentForExternalCallCompletedEventHandler ApplicationComponentForExternalCallCompleted;
        
        /// <remarks/>
        public event ApplicationComponentByCrossGroupIDForExternalCallCompletedEventHandler ApplicationComponentByCrossGroupIDForExternalCallCompleted;
        
        /// <remarks/>
        public event GetMakerListForExternalCallCompletedEventHandler GetMakerListForExternalCallCompleted;
        
        /// <remarks/>
        public event GetModelListForExternalCallCompletedEventHandler GetModelListForExternalCallCompleted;
        
        /// <remarks/>
        public event GetEngineListForExternalCallCompletedEventHandler GetEngineListForExternalCallCompleted;
        
        /// <remarks/>
        public event FindApplicationForExternalCallCompletedEventHandler FindApplicationForExternalCallCompleted;
        
        /// <remarks/>
        public event FindComponentsForExternalCallCompletedEventHandler FindComponentsForExternalCallCompleted;
        
        /// <remarks/>
        public event GetApplicationForExternalCallCompletedEventHandler GetApplicationForExternalCallCompleted;
        
        /// <remarks/>
        public event GetImagesCountForExternalCallCompletedEventHandler GetImagesCountForExternalCallCompleted;
        
        /// <remarks/>
        public event GetImagesForExternalCallCompletedEventHandler GetImagesForExternalCallCompleted;
        
        /// <remarks/>
        public event GetImageByNumberForExternalCallCompletedEventHandler GetImageByNumberForExternalCallCompleted;
        
        /// <remarks/>
        public event FindNumberForExternalCallCompletedEventHandler FindNumberForExternalCallCompleted;
        
        /// <remarks/>
        public event FindNumberInCrossForExternalCallCompletedEventHandler FindNumberInCrossForExternalCallCompleted;
        
        /// <remarks/>
        public event GetCrossCommentForExternalCallCompletedEventHandler GetCrossCommentForExternalCallCompleted;
        
        /// <remarks/>
        public event GetExternalMNDListCompletedEventHandler GetExternalMNDListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/SetUser", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUser(string user, string password, string version) {
            object[] results = this.Invoke("SetUser", new object[] {
                        user,
                        password,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserAsync(string user, string password, string version) {
            this.SetUserAsync(user, password, version, null);
        }
        
        /// <remarks/>
        public void SetUserAsync(string user, string password, string version, object userState) {
            if ((this.SetUserOperationCompleted == null)) {
                this.SetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserOperationCompleted);
            }
            this.InvokeAsync("SetUser", new object[] {
                        user,
                        password,
                        version}, this.SetUserOperationCompleted, userState);
        }
        
        private void OnSetUserOperationCompleted(object arg) {
            if ((this.SetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserCompleted(this, new SetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetAccessAttribute", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAccessAttribute(string attribute_name) {
            object[] results = this.Invoke("GetAccessAttribute", new object[] {
                        attribute_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessAttributeAsync(string attribute_name) {
            this.GetAccessAttributeAsync(attribute_name, null);
        }
        
        /// <remarks/>
        public void GetAccessAttributeAsync(string attribute_name, object userState) {
            if ((this.GetAccessAttributeOperationCompleted == null)) {
                this.GetAccessAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessAttributeOperationCompleted);
            }
            this.InvokeAsync("GetAccessAttribute", new object[] {
                        attribute_name}, this.GetAccessAttributeOperationCompleted, userState);
        }
        
        private void OnGetAccessAttributeOperationCompleted(object arg) {
            if ((this.GetAccessAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessAttributeCompleted(this, new GetAccessAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindNumberInCross", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindNumberInCross(string number) {
            object[] results = this.Invoke("FindNumberInCross", new object[] {
                        number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindNumberInCrossAsync(string number) {
            this.FindNumberInCrossAsync(number, null);
        }
        
        /// <remarks/>
        public void FindNumberInCrossAsync(string number, object userState) {
            if ((this.FindNumberInCrossOperationCompleted == null)) {
                this.FindNumberInCrossOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindNumberInCrossOperationCompleted);
            }
            this.InvokeAsync("FindNumberInCross", new object[] {
                        number}, this.FindNumberInCrossOperationCompleted, userState);
        }
        
        private void OnFindNumberInCrossOperationCompleted(object arg) {
            if ((this.FindNumberInCrossCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindNumberInCrossCompleted(this, new FindNumberInCrossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindNumber", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindNumber(string number, bool only) {
            object[] results = this.Invoke("FindNumber", new object[] {
                        number,
                        only});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindNumberAsync(string number, bool only) {
            this.FindNumberAsync(number, only, null);
        }
        
        /// <remarks/>
        public void FindNumberAsync(string number, bool only, object userState) {
            if ((this.FindNumberOperationCompleted == null)) {
                this.FindNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindNumberOperationCompleted);
            }
            this.InvokeAsync("FindNumber", new object[] {
                        number,
                        only}, this.FindNumberOperationCompleted, userState);
        }
        
        private void OnFindNumberOperationCompleted(object arg) {
            if ((this.FindNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindNumberCompleted(this, new FindNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindInGoodsRest", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindInGoodsRest(int crossGroupID) {
            object[] results = this.Invoke("FindInGoodsRest", new object[] {
                        crossGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindInGoodsRestAsync(int crossGroupID) {
            this.FindInGoodsRestAsync(crossGroupID, null);
        }
        
        /// <remarks/>
        public void FindInGoodsRestAsync(int crossGroupID, object userState) {
            if ((this.FindInGoodsRestOperationCompleted == null)) {
                this.FindInGoodsRestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindInGoodsRestOperationCompleted);
            }
            this.InvokeAsync("FindInGoodsRest", new object[] {
                        crossGroupID}, this.FindInGoodsRestOperationCompleted, userState);
        }
        
        private void OnFindInGoodsRestOperationCompleted(object arg) {
            if ((this.FindInGoodsRestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindInGoodsRestCompleted(this, new FindInGoodsRestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindInDocStr", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindInDocStr(int docID) {
            object[] results = this.Invoke("FindInDocStr", new object[] {
                        docID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindInDocStrAsync(int docID) {
            this.FindInDocStrAsync(docID, null);
        }
        
        /// <remarks/>
        public void FindInDocStrAsync(int docID, object userState) {
            if ((this.FindInDocStrOperationCompleted == null)) {
                this.FindInDocStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindInDocStrOperationCompleted);
            }
            this.InvokeAsync("FindInDocStr", new object[] {
                        docID}, this.FindInDocStrOperationCompleted, userState);
        }
        
        private void OnFindInDocStrOperationCompleted(object arg) {
            if ((this.FindInDocStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindInDocStrCompleted(this, new FindInDocStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCartEnabled", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCartEnabled() {
            object[] results = this.Invoke("GetCartEnabled", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartEnabledAsync() {
            this.GetCartEnabledAsync(null);
        }
        
        /// <remarks/>
        public void GetCartEnabledAsync(object userState) {
            if ((this.GetCartEnabledOperationCompleted == null)) {
                this.GetCartEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartEnabledOperationCompleted);
            }
            this.InvokeAsync("GetCartEnabled", new object[0], this.GetCartEnabledOperationCompleted, userState);
        }
        
        private void OnGetCartEnabledOperationCompleted(object arg) {
            if ((this.GetCartEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartEnabledCompleted(this, new GetCartEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCart", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCart() {
            object[] results = this.Invoke("GetCart", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartAsync() {
            this.GetCartAsync(null);
        }
        
        /// <remarks/>
        public void GetCartAsync(object userState) {
            if ((this.GetCartOperationCompleted == null)) {
                this.GetCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartOperationCompleted);
            }
            this.InvokeAsync("GetCart", new object[0], this.GetCartOperationCompleted, userState);
        }
        
        private void OnGetCartOperationCompleted(object arg) {
            if ((this.GetCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartCompleted(this, new GetCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/AddToCart", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddToCart(string number, int amount, decimal outPrice, string description) {
            object[] results = this.Invoke("AddToCart", new object[] {
                        number,
                        amount,
                        outPrice,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddToCartAsync(string number, int amount, decimal outPrice, string description) {
            this.AddToCartAsync(number, amount, outPrice, description, null);
        }
        
        /// <remarks/>
        public void AddToCartAsync(string number, int amount, decimal outPrice, string description, object userState) {
            if ((this.AddToCartOperationCompleted == null)) {
                this.AddToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCartOperationCompleted);
            }
            this.InvokeAsync("AddToCart", new object[] {
                        number,
                        amount,
                        outPrice,
                        description}, this.AddToCartOperationCompleted, userState);
        }
        
        private void OnAddToCartOperationCompleted(object arg) {
            if ((this.AddToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCartCompleted(this, new AddToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/AddToCartNew", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddToCartNew(string number, int amount, decimal outPrice, string description, int warehouseID) {
            object[] results = this.Invoke("AddToCartNew", new object[] {
                        number,
                        amount,
                        outPrice,
                        description,
                        warehouseID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddToCartNewAsync(string number, int amount, decimal outPrice, string description, int warehouseID) {
            this.AddToCartNewAsync(number, amount, outPrice, description, warehouseID, null);
        }
        
        /// <remarks/>
        public void AddToCartNewAsync(string number, int amount, decimal outPrice, string description, int warehouseID, object userState) {
            if ((this.AddToCartNewOperationCompleted == null)) {
                this.AddToCartNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCartNewOperationCompleted);
            }
            this.InvokeAsync("AddToCartNew", new object[] {
                        number,
                        amount,
                        outPrice,
                        description,
                        warehouseID}, this.AddToCartNewOperationCompleted, userState);
        }
        
        private void OnAddToCartNewOperationCompleted(object arg) {
            if ((this.AddToCartNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCartNewCompleted(this, new AddToCartNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/DeleteFromCart", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFromCart(int id) {
            this.Invoke("DeleteFromCart", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteFromCartAsync(int id) {
            this.DeleteFromCartAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteFromCartAsync(int id, object userState) {
            if ((this.DeleteFromCartOperationCompleted == null)) {
                this.DeleteFromCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFromCartOperationCompleted);
            }
            this.InvokeAsync("DeleteFromCart", new object[] {
                        id}, this.DeleteFromCartOperationCompleted, userState);
        }
        
        private void OnDeleteFromCartOperationCompleted(object arg) {
            if ((this.DeleteFromCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFromCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/OrderCreate", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OrderCreate(int warehouseGroupID, string clientComment) {
            this.Invoke("OrderCreate", new object[] {
                        warehouseGroupID,
                        clientComment});
        }
        
        /// <remarks/>
        public void OrderCreateAsync(int warehouseGroupID, string clientComment) {
            this.OrderCreateAsync(warehouseGroupID, clientComment, null);
        }
        
        /// <remarks/>
        public void OrderCreateAsync(int warehouseGroupID, string clientComment, object userState) {
            if ((this.OrderCreateOperationCompleted == null)) {
                this.OrderCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderCreateOperationCompleted);
            }
            this.InvokeAsync("OrderCreate", new object[] {
                        warehouseGroupID,
                        clientComment}, this.OrderCreateOperationCompleted, userState);
        }
        
        private void OnOrderCreateOperationCompleted(object arg) {
            if ((this.OrderCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderCreateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCurrencyRate", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCurrencyRate() {
            object[] results = this.Invoke("GetCurrencyRate", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync() {
            this.GetCurrencyRateAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync(object userState) {
            if ((this.GetCurrencyRateOperationCompleted == null)) {
                this.GetCurrencyRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyRateOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyRate", new object[0], this.GetCurrencyRateOperationCompleted, userState);
        }
        
        private void OnGetCurrencyRateOperationCompleted(object arg) {
            if ((this.GetCurrencyRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyRateCompleted(this, new GetCurrencyRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCurrency", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrency() {
            object[] results = this.Invoke("GetCurrency", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyAsync() {
            this.GetCurrencyAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrencyAsync(object userState) {
            if ((this.GetCurrencyOperationCompleted == null)) {
                this.GetCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyOperationCompleted);
            }
            this.InvokeAsync("GetCurrency", new object[0], this.GetCurrencyOperationCompleted, userState);
        }
        
        private void OnGetCurrencyOperationCompleted(object arg) {
            if ((this.GetCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCompleted(this, new GetCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCredit", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCredit() {
            object[] results = this.Invoke("GetCredit", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync() {
            this.GetCreditAsync(null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[0], this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCurrentDate", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetCurrentDate() {
            object[] results = this.Invoke("GetCurrentDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentDateAsync() {
            this.GetCurrentDateAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentDateAsync(object userState) {
            if ((this.GetCurrentDateOperationCompleted == null)) {
                this.GetCurrentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentDateOperationCompleted);
            }
            this.InvokeAsync("GetCurrentDate", new object[0], this.GetCurrentDateOperationCompleted, userState);
        }
        
        private void OnGetCurrentDateOperationCompleted(object arg) {
            if ((this.GetCurrentDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentDateCompleted(this, new GetCurrentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetOrders", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrders(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll) {
            object[] results = this.Invoke("GetOrders", new object[] {
                        dateBegin,
                        dateEnd,
                        showAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll) {
            this.GetOrdersAsync(dateBegin, dateEnd, showAll, null);
        }
        
        /// <remarks/>
        public void GetOrdersAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll, object userState) {
            if ((this.GetOrdersOperationCompleted == null)) {
                this.GetOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersOperationCompleted);
            }
            this.InvokeAsync("GetOrders", new object[] {
                        dateBegin,
                        dateEnd,
                        showAll}, this.GetOrdersOperationCompleted, userState);
        }
        
        private void OnGetOrdersOperationCompleted(object arg) {
            if ((this.GetOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetDaysOfReserve", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDaysOfReserve() {
            object[] results = this.Invoke("GetDaysOfReserve", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDaysOfReserveAsync() {
            this.GetDaysOfReserveAsync(null);
        }
        
        /// <remarks/>
        public void GetDaysOfReserveAsync(object userState) {
            if ((this.GetDaysOfReserveOperationCompleted == null)) {
                this.GetDaysOfReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDaysOfReserveOperationCompleted);
            }
            this.InvokeAsync("GetDaysOfReserve", new object[0], this.GetDaysOfReserveOperationCompleted, userState);
        }
        
        private void OnGetDaysOfReserveOperationCompleted(object arg) {
            if ((this.GetDaysOfReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDaysOfReserveCompleted(this, new GetDaysOfReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetBalans", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBalans(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll) {
            object[] results = this.Invoke("GetBalans", new object[] {
                        dateBegin,
                        dateEnd,
                        showAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalansAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll) {
            this.GetBalansAsync(dateBegin, dateEnd, showAll, null);
        }
        
        /// <remarks/>
        public void GetBalansAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool showAll, object userState) {
            if ((this.GetBalansOperationCompleted == null)) {
                this.GetBalansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalansOperationCompleted);
            }
            this.InvokeAsync("GetBalans", new object[] {
                        dateBegin,
                        dateEnd,
                        showAll}, this.GetBalansOperationCompleted, userState);
        }
        
        private void OnGetBalansOperationCompleted(object arg) {
            if ((this.GetBalansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalansCompleted(this, new GetBalansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/CalcPartnerBalance", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalcPartnerBalance() {
            object[] results = this.Invoke("CalcPartnerBalance", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalcPartnerBalanceAsync() {
            this.CalcPartnerBalanceAsync(null);
        }
        
        /// <remarks/>
        public void CalcPartnerBalanceAsync(object userState) {
            if ((this.CalcPartnerBalanceOperationCompleted == null)) {
                this.CalcPartnerBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcPartnerBalanceOperationCompleted);
            }
            this.InvokeAsync("CalcPartnerBalance", new object[0], this.CalcPartnerBalanceOperationCompleted, userState);
        }
        
        private void OnCalcPartnerBalanceOperationCompleted(object arg) {
            if ((this.CalcPartnerBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcPartnerBalanceCompleted(this, new CalcPartnerBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/RestCredit", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal RestCredit() {
            object[] results = this.Invoke("RestCredit", new object[0]);
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void RestCreditAsync() {
            this.RestCreditAsync(null);
        }
        
        /// <remarks/>
        public void RestCreditAsync(object userState) {
            if ((this.RestCreditOperationCompleted == null)) {
                this.RestCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestCreditOperationCompleted);
            }
            this.InvokeAsync("RestCredit", new object[0], this.RestCreditOperationCompleted, userState);
        }
        
        private void OnRestCreditOperationCompleted(object arg) {
            if ((this.RestCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestCreditCompleted(this, new RestCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/RestDaysOfReserve", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RestDaysOfReserve() {
            object[] results = this.Invoke("RestDaysOfReserve", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RestDaysOfReserveAsync() {
            this.RestDaysOfReserveAsync(null);
        }
        
        /// <remarks/>
        public void RestDaysOfReserveAsync(object userState) {
            if ((this.RestDaysOfReserveOperationCompleted == null)) {
                this.RestDaysOfReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestDaysOfReserveOperationCompleted);
            }
            this.InvokeAsync("RestDaysOfReserve", new object[0], this.RestDaysOfReserveOperationCompleted, userState);
        }
        
        private void OnRestDaysOfReserveOperationCompleted(object arg) {
            if ((this.RestDaysOfReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestDaysOfReserveCompleted(this, new RestDaysOfReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/Test", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object Test(object obj) {
            object[] results = this.Invoke("Test", new object[] {
                        obj});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync(object obj) {
            this.TestAsync(obj, null);
        }
        
        /// <remarks/>
        public void TestAsync(object obj, object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[] {
                        obj}, this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/Temp", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Temp(object obj) {
            object[] results = this.Invoke("Temp", new object[] {
                        obj});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TempAsync(object obj) {
            this.TempAsync(obj, null);
        }
        
        /// <remarks/>
        public void TempAsync(object obj, object userState) {
            if ((this.TempOperationCompleted == null)) {
                this.TempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTempOperationCompleted);
            }
            this.InvokeAsync("Temp", new object[] {
                        obj}, this.TempOperationCompleted, userState);
        }
        
        private void OnTempOperationCompleted(object arg) {
            if ((this.TempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TempCompleted(this, new TempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/Ping", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetMakerList", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMakerList() {
            object[] results = this.Invoke("GetMakerList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMakerListAsync() {
            this.GetMakerListAsync(null);
        }
        
        /// <remarks/>
        public void GetMakerListAsync(object userState) {
            if ((this.GetMakerListOperationCompleted == null)) {
                this.GetMakerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMakerListOperationCompleted);
            }
            this.InvokeAsync("GetMakerList", new object[0], this.GetMakerListOperationCompleted, userState);
        }
        
        private void OnGetMakerListOperationCompleted(object arg) {
            if ((this.GetMakerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMakerListCompleted(this, new GetMakerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetModelList", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModelList(string maker) {
            object[] results = this.Invoke("GetModelList", new object[] {
                        maker});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelListAsync(string maker) {
            this.GetModelListAsync(maker, null);
        }
        
        /// <remarks/>
        public void GetModelListAsync(string maker, object userState) {
            if ((this.GetModelListOperationCompleted == null)) {
                this.GetModelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelListOperationCompleted);
            }
            this.InvokeAsync("GetModelList", new object[] {
                        maker}, this.GetModelListOperationCompleted, userState);
        }
        
        private void OnGetModelListOperationCompleted(object arg) {
            if ((this.GetModelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelListCompleted(this, new GetModelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetEngineList", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEngineList(string maker, string model) {
            object[] results = this.Invoke("GetEngineList", new object[] {
                        maker,
                        model});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEngineListAsync(string maker, string model) {
            this.GetEngineListAsync(maker, model, null);
        }
        
        /// <remarks/>
        public void GetEngineListAsync(string maker, string model, object userState) {
            if ((this.GetEngineListOperationCompleted == null)) {
                this.GetEngineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEngineListOperationCompleted);
            }
            this.InvokeAsync("GetEngineList", new object[] {
                        maker,
                        model}, this.GetEngineListOperationCompleted, userState);
        }
        
        private void OnGetEngineListOperationCompleted(object arg) {
            if ((this.GetEngineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEngineListCompleted(this, new GetEngineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetApplication", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplication(string maker, string model, string engine) {
            object[] results = this.Invoke("GetApplication", new object[] {
                        maker,
                        model,
                        engine});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationAsync(string maker, string model, string engine) {
            this.GetApplicationAsync(maker, model, engine, null);
        }
        
        /// <remarks/>
        public void GetApplicationAsync(string maker, string model, string engine, object userState) {
            if ((this.GetApplicationOperationCompleted == null)) {
                this.GetApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationOperationCompleted);
            }
            this.InvokeAsync("GetApplication", new object[] {
                        maker,
                        model,
                        engine}, this.GetApplicationOperationCompleted, userState);
        }
        
        private void OnGetApplicationOperationCompleted(object arg) {
            if ((this.GetApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationCompleted(this, new GetApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindApplication", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindApplication(int crossGroupID) {
            object[] results = this.Invoke("FindApplication", new object[] {
                        crossGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindApplicationAsync(int crossGroupID) {
            this.FindApplicationAsync(crossGroupID, null);
        }
        
        /// <remarks/>
        public void FindApplicationAsync(int crossGroupID, object userState) {
            if ((this.FindApplicationOperationCompleted == null)) {
                this.FindApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindApplicationOperationCompleted);
            }
            this.InvokeAsync("FindApplication", new object[] {
                        crossGroupID}, this.FindApplicationOperationCompleted, userState);
        }
        
        private void OnFindApplicationOperationCompleted(object arg) {
            if ((this.FindApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindApplicationCompleted(this, new FindApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/ApplicationComponentByCrossGroupID", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplicationComponentByCrossGroupID(int crossGroupID) {
            object[] results = this.Invoke("ApplicationComponentByCrossGroupID", new object[] {
                        crossGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationComponentByCrossGroupIDAsync(int crossGroupID) {
            this.ApplicationComponentByCrossGroupIDAsync(crossGroupID, null);
        }
        
        /// <remarks/>
        public void ApplicationComponentByCrossGroupIDAsync(int crossGroupID, object userState) {
            if ((this.ApplicationComponentByCrossGroupIDOperationCompleted == null)) {
                this.ApplicationComponentByCrossGroupIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationComponentByCrossGroupIDOperationCompleted);
            }
            this.InvokeAsync("ApplicationComponentByCrossGroupID", new object[] {
                        crossGroupID}, this.ApplicationComponentByCrossGroupIDOperationCompleted, userState);
        }
        
        private void OnApplicationComponentByCrossGroupIDOperationCompleted(object arg) {
            if ((this.ApplicationComponentByCrossGroupIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationComponentByCrossGroupIDCompleted(this, new ApplicationComponentByCrossGroupIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindComponents", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindComponents(string number) {
            object[] results = this.Invoke("FindComponents", new object[] {
                        number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindComponentsAsync(string number) {
            this.FindComponentsAsync(number, null);
        }
        
        /// <remarks/>
        public void FindComponentsAsync(string number, object userState) {
            if ((this.FindComponentsOperationCompleted == null)) {
                this.FindComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindComponentsOperationCompleted);
            }
            this.InvokeAsync("FindComponents", new object[] {
                        number}, this.FindComponentsOperationCompleted, userState);
        }
        
        private void OnFindComponentsOperationCompleted(object arg) {
            if ((this.FindComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindComponentsCompleted(this, new FindComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImages", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImages(int crossGroupID) {
            object[] results = this.Invoke("GetImages", new object[] {
                        crossGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesAsync(int crossGroupID) {
            this.GetImagesAsync(crossGroupID, null);
        }
        
        /// <remarks/>
        public void GetImagesAsync(int crossGroupID, object userState) {
            if ((this.GetImagesOperationCompleted == null)) {
                this.GetImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesOperationCompleted);
            }
            this.InvokeAsync("GetImages", new object[] {
                        crossGroupID}, this.GetImagesOperationCompleted, userState);
        }
        
        private void OnGetImagesOperationCompleted(object arg) {
            if ((this.GetImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCompleted(this, new GetImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImageByNumber", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageByNumber(string number) {
            object[] results = this.Invoke("GetImageByNumber", new object[] {
                        number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageByNumberAsync(string number) {
            this.GetImageByNumberAsync(number, null);
        }
        
        /// <remarks/>
        public void GetImageByNumberAsync(string number, object userState) {
            if ((this.GetImageByNumberOperationCompleted == null)) {
                this.GetImageByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageByNumberOperationCompleted);
            }
            this.InvokeAsync("GetImageByNumber", new object[] {
                        number}, this.GetImageByNumberOperationCompleted, userState);
        }
        
        private void OnGetImageByNumberOperationCompleted(object arg) {
            if ((this.GetImageByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageByNumberCompleted(this, new GetImageByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImagesCount", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetImagesCount(int crossGroupID) {
            object[] results = this.Invoke("GetImagesCount", new object[] {
                        crossGroupID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(int crossGroupID) {
            this.GetImagesCountAsync(crossGroupID, null);
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(int crossGroupID, object userState) {
            if ((this.GetImagesCountOperationCompleted == null)) {
                this.GetImagesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesCountOperationCompleted);
            }
            this.InvokeAsync("GetImagesCount", new object[] {
                        crossGroupID}, this.GetImagesCountOperationCompleted, userState);
        }
        
        private void OnGetImagesCountOperationCompleted(object arg) {
            if ((this.GetImagesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCountCompleted(this, new GetImagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCrossComment", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCrossComment(int CrossGroupID) {
            object[] results = this.Invoke("GetCrossComment", new object[] {
                        CrossGroupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrossCommentAsync(int CrossGroupID) {
            this.GetCrossCommentAsync(CrossGroupID, null);
        }
        
        /// <remarks/>
        public void GetCrossCommentAsync(int CrossGroupID, object userState) {
            if ((this.GetCrossCommentOperationCompleted == null)) {
                this.GetCrossCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrossCommentOperationCompleted);
            }
            this.InvokeAsync("GetCrossComment", new object[] {
                        CrossGroupID}, this.GetCrossCommentOperationCompleted, userState);
        }
        
        private void OnGetCrossCommentOperationCompleted(object arg) {
            if ((this.GetCrossCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrossCommentCompleted(this, new GetCrossCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/ApplicationComponent", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplicationComponent(string number) {
            object[] results = this.Invoke("ApplicationComponent", new object[] {
                        number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationComponentAsync(string number) {
            this.ApplicationComponentAsync(number, null);
        }
        
        /// <remarks/>
        public void ApplicationComponentAsync(string number, object userState) {
            if ((this.ApplicationComponentOperationCompleted == null)) {
                this.ApplicationComponentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationComponentOperationCompleted);
            }
            this.InvokeAsync("ApplicationComponent", new object[] {
                        number}, this.ApplicationComponentOperationCompleted, userState);
        }
        
        private void OnApplicationComponentOperationCompleted(object arg) {
            if ((this.ApplicationComponentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationComponentCompleted(this, new ApplicationComponentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetShowUnitApplicationEnabled", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetShowUnitApplicationEnabled() {
            object[] results = this.Invoke("GetShowUnitApplicationEnabled", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetShowUnitApplicationEnabledAsync() {
            this.GetShowUnitApplicationEnabledAsync(null);
        }
        
        /// <remarks/>
        public void GetShowUnitApplicationEnabledAsync(object userState) {
            if ((this.GetShowUnitApplicationEnabledOperationCompleted == null)) {
                this.GetShowUnitApplicationEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowUnitApplicationEnabledOperationCompleted);
            }
            this.InvokeAsync("GetShowUnitApplicationEnabled", new object[0], this.GetShowUnitApplicationEnabledOperationCompleted, userState);
        }
        
        private void OnGetShowUnitApplicationEnabledOperationCompleted(object arg) {
            if ((this.GetShowUnitApplicationEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowUnitApplicationEnabledCompleted(this, new GetShowUnitApplicationEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/UpdateCartComment", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCartComment(int warehouseGroupID, string comment) {
            object[] results = this.Invoke("UpdateCartComment", new object[] {
                        warehouseGroupID,
                        comment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCartCommentAsync(int warehouseGroupID, string comment) {
            this.UpdateCartCommentAsync(warehouseGroupID, comment, null);
        }
        
        /// <remarks/>
        public void UpdateCartCommentAsync(int warehouseGroupID, string comment, object userState) {
            if ((this.UpdateCartCommentOperationCompleted == null)) {
                this.UpdateCartCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCartCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateCartComment", new object[] {
                        warehouseGroupID,
                        comment}, this.UpdateCartCommentOperationCompleted, userState);
        }
        
        private void OnUpdateCartCommentOperationCompleted(object arg) {
            if ((this.UpdateCartCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCartCommentCompleted(this, new UpdateCartCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCartComments", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCartComments(int warehouseGroupID) {
            object[] results = this.Invoke("GetCartComments", new object[] {
                        warehouseGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartCommentsAsync(int warehouseGroupID) {
            this.GetCartCommentsAsync(warehouseGroupID, null);
        }
        
        /// <remarks/>
        public void GetCartCommentsAsync(int warehouseGroupID, object userState) {
            if ((this.GetCartCommentsOperationCompleted == null)) {
                this.GetCartCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartCommentsOperationCompleted);
            }
            this.InvokeAsync("GetCartComments", new object[] {
                        warehouseGroupID}, this.GetCartCommentsOperationCompleted, userState);
        }
        
        private void OnGetCartCommentsOperationCompleted(object arg) {
            if ((this.GetCartCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartCommentsCompleted(this, new GetCartCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetOrderComments", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderComments(int docID) {
            object[] results = this.Invoke("GetOrderComments", new object[] {
                        docID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderCommentsAsync(int docID) {
            this.GetOrderCommentsAsync(docID, null);
        }
        
        /// <remarks/>
        public void GetOrderCommentsAsync(int docID, object userState) {
            if ((this.GetOrderCommentsOperationCompleted == null)) {
                this.GetOrderCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderCommentsOperationCompleted);
            }
            this.InvokeAsync("GetOrderComments", new object[] {
                        docID}, this.GetOrderCommentsOperationCompleted, userState);
        }
        
        private void OnGetOrderCommentsOperationCompleted(object arg) {
            if ((this.GetOrderCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderCommentsCompleted(this, new GetOrderCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/UpdateUserViewSettings", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserViewSettings(int showAllCrosses, int showAuxInfo) {
            object[] results = this.Invoke("UpdateUserViewSettings", new object[] {
                        showAllCrosses,
                        showAuxInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserViewSettingsAsync(int showAllCrosses, int showAuxInfo) {
            this.UpdateUserViewSettingsAsync(showAllCrosses, showAuxInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserViewSettingsAsync(int showAllCrosses, int showAuxInfo, object userState) {
            if ((this.UpdateUserViewSettingsOperationCompleted == null)) {
                this.UpdateUserViewSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserViewSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserViewSettings", new object[] {
                        showAllCrosses,
                        showAuxInfo}, this.UpdateUserViewSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateUserViewSettingsOperationCompleted(object arg) {
            if ((this.UpdateUserViewSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserViewSettingsCompleted(this, new UpdateUserViewSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetForthcomingInfo", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetForthcomingInfo(string number) {
            object[] results = this.Invoke("GetForthcomingInfo", new object[] {
                        number});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetForthcomingInfoAsync(string number) {
            this.GetForthcomingInfoAsync(number, null);
        }
        
        /// <remarks/>
        public void GetForthcomingInfoAsync(string number, object userState) {
            if ((this.GetForthcomingInfoOperationCompleted == null)) {
                this.GetForthcomingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForthcomingInfoOperationCompleted);
            }
            this.InvokeAsync("GetForthcomingInfo", new object[] {
                        number}, this.GetForthcomingInfoOperationCompleted, userState);
        }
        
        private void OnGetForthcomingInfoOperationCompleted(object arg) {
            if ((this.GetForthcomingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForthcomingInfoCompleted(this, new GetForthcomingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/ReserveForthcoming", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveForthcoming(int forthcomingID, string number, decimal price, string warehouseName, decimal qty, string comment) {
            object[] results = this.Invoke("ReserveForthcoming", new object[] {
                        forthcomingID,
                        number,
                        price,
                        warehouseName,
                        qty,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveForthcomingAsync(int forthcomingID, string number, decimal price, string warehouseName, decimal qty, string comment) {
            this.ReserveForthcomingAsync(forthcomingID, number, price, warehouseName, qty, comment, null);
        }
        
        /// <remarks/>
        public void ReserveForthcomingAsync(int forthcomingID, string number, decimal price, string warehouseName, decimal qty, string comment, object userState) {
            if ((this.ReserveForthcomingOperationCompleted == null)) {
                this.ReserveForthcomingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveForthcomingOperationCompleted);
            }
            this.InvokeAsync("ReserveForthcoming", new object[] {
                        forthcomingID,
                        number,
                        price,
                        warehouseName,
                        qty,
                        comment}, this.ReserveForthcomingOperationCompleted, userState);
        }
        
        private void OnReserveForthcomingOperationCompleted(object arg) {
            if ((this.ReserveForthcomingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveForthcomingCompleted(this, new ReserveForthcomingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetForthcomingReserveInfo", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetForthcomingReserveInfo() {
            object[] results = this.Invoke("GetForthcomingReserveInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetForthcomingReserveInfoAsync() {
            this.GetForthcomingReserveInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetForthcomingReserveInfoAsync(object userState) {
            if ((this.GetForthcomingReserveInfoOperationCompleted == null)) {
                this.GetForthcomingReserveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForthcomingReserveInfoOperationCompleted);
            }
            this.InvokeAsync("GetForthcomingReserveInfo", new object[0], this.GetForthcomingReserveInfoOperationCompleted, userState);
        }
        
        private void OnGetForthcomingReserveInfoOperationCompleted(object arg) {
            if ((this.GetForthcomingReserveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForthcomingReserveInfoCompleted(this, new GetForthcomingReserveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/DeleteForthcomingReserve", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteForthcomingReserve(int reserveID) {
            object[] results = this.Invoke("DeleteForthcomingReserve", new object[] {
                        reserveID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteForthcomingReserveAsync(int reserveID) {
            this.DeleteForthcomingReserveAsync(reserveID, null);
        }
        
        /// <remarks/>
        public void DeleteForthcomingReserveAsync(int reserveID, object userState) {
            if ((this.DeleteForthcomingReserveOperationCompleted == null)) {
                this.DeleteForthcomingReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteForthcomingReserveOperationCompleted);
            }
            this.InvokeAsync("DeleteForthcomingReserve", new object[] {
                        reserveID}, this.DeleteForthcomingReserveOperationCompleted, userState);
        }
        
        private void OnDeleteForthcomingReserveOperationCompleted(object arg) {
            if ((this.DeleteForthcomingReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteForthcomingReserveCompleted(this, new DeleteForthcomingReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/SetForOrder", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetForOrder(int id, int isForOrder) {
            object[] results = this.Invoke("SetForOrder", new object[] {
                        id,
                        isForOrder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetForOrderAsync(int id, int isForOrder) {
            this.SetForOrderAsync(id, isForOrder, null);
        }
        
        /// <remarks/>
        public void SetForOrderAsync(int id, int isForOrder, object userState) {
            if ((this.SetForOrderOperationCompleted == null)) {
                this.SetForOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForOrderOperationCompleted);
            }
            this.InvokeAsync("SetForOrder", new object[] {
                        id,
                        isForOrder}, this.SetForOrderOperationCompleted, userState);
        }
        
        private void OnSetForOrderOperationCompleted(object arg) {
            if ((this.SetForOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForOrderCompleted(this, new SetForOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/ApplicationComponentForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplicationComponentForExternalCall(string number, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("ApplicationComponentForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationComponentForExternalCallAsync(string number, string externalLogin, string externalPassword) {
            this.ApplicationComponentForExternalCallAsync(number, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void ApplicationComponentForExternalCallAsync(string number, string externalLogin, string externalPassword, object userState) {
            if ((this.ApplicationComponentForExternalCallOperationCompleted == null)) {
                this.ApplicationComponentForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationComponentForExternalCallOperationCompleted);
            }
            this.InvokeAsync("ApplicationComponentForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword}, this.ApplicationComponentForExternalCallOperationCompleted, userState);
        }
        
        private void OnApplicationComponentForExternalCallOperationCompleted(object arg) {
            if ((this.ApplicationComponentForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationComponentForExternalCallCompleted(this, new ApplicationComponentForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/ApplicationComponentByCrossGroupIDForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplicationComponentByCrossGroupIDForExternalCall(int crossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("ApplicationComponentByCrossGroupIDForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationComponentByCrossGroupIDForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword) {
            this.ApplicationComponentByCrossGroupIDForExternalCallAsync(crossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void ApplicationComponentByCrossGroupIDForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.ApplicationComponentByCrossGroupIDForExternalCallOperationCompleted == null)) {
                this.ApplicationComponentByCrossGroupIDForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationComponentByCrossGroupIDForExternalCallOperationCompleted);
            }
            this.InvokeAsync("ApplicationComponentByCrossGroupIDForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword}, this.ApplicationComponentByCrossGroupIDForExternalCallOperationCompleted, userState);
        }
        
        private void OnApplicationComponentByCrossGroupIDForExternalCallOperationCompleted(object arg) {
            if ((this.ApplicationComponentByCrossGroupIDForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationComponentByCrossGroupIDForExternalCallCompleted(this, new ApplicationComponentByCrossGroupIDForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetMakerListForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMakerListForExternalCall(string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetMakerListForExternalCall", new object[] {
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMakerListForExternalCallAsync(string externalLogin, string externalPassword) {
            this.GetMakerListForExternalCallAsync(externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetMakerListForExternalCallAsync(string externalLogin, string externalPassword, object userState) {
            if ((this.GetMakerListForExternalCallOperationCompleted == null)) {
                this.GetMakerListForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMakerListForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetMakerListForExternalCall", new object[] {
                        externalLogin,
                        externalPassword}, this.GetMakerListForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetMakerListForExternalCallOperationCompleted(object arg) {
            if ((this.GetMakerListForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMakerListForExternalCallCompleted(this, new GetMakerListForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetModelListForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModelListForExternalCall(string maker, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetModelListForExternalCall", new object[] {
                        maker,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModelListForExternalCallAsync(string maker, string externalLogin, string externalPassword) {
            this.GetModelListForExternalCallAsync(maker, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetModelListForExternalCallAsync(string maker, string externalLogin, string externalPassword, object userState) {
            if ((this.GetModelListForExternalCallOperationCompleted == null)) {
                this.GetModelListForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModelListForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetModelListForExternalCall", new object[] {
                        maker,
                        externalLogin,
                        externalPassword}, this.GetModelListForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetModelListForExternalCallOperationCompleted(object arg) {
            if ((this.GetModelListForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModelListForExternalCallCompleted(this, new GetModelListForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetEngineListForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEngineListForExternalCall(string maker, string model, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetEngineListForExternalCall", new object[] {
                        maker,
                        model,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEngineListForExternalCallAsync(string maker, string model, string externalLogin, string externalPassword) {
            this.GetEngineListForExternalCallAsync(maker, model, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetEngineListForExternalCallAsync(string maker, string model, string externalLogin, string externalPassword, object userState) {
            if ((this.GetEngineListForExternalCallOperationCompleted == null)) {
                this.GetEngineListForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEngineListForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetEngineListForExternalCall", new object[] {
                        maker,
                        model,
                        externalLogin,
                        externalPassword}, this.GetEngineListForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetEngineListForExternalCallOperationCompleted(object arg) {
            if ((this.GetEngineListForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEngineListForExternalCallCompleted(this, new GetEngineListForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindApplicationForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindApplicationForExternalCall(int crossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("FindApplicationForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindApplicationForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword) {
            this.FindApplicationForExternalCallAsync(crossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void FindApplicationForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.FindApplicationForExternalCallOperationCompleted == null)) {
                this.FindApplicationForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindApplicationForExternalCallOperationCompleted);
            }
            this.InvokeAsync("FindApplicationForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword}, this.FindApplicationForExternalCallOperationCompleted, userState);
        }
        
        private void OnFindApplicationForExternalCallOperationCompleted(object arg) {
            if ((this.FindApplicationForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindApplicationForExternalCallCompleted(this, new FindApplicationForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindComponentsForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindComponentsForExternalCall(string number, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("FindComponentsForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindComponentsForExternalCallAsync(string number, string externalLogin, string externalPassword) {
            this.FindComponentsForExternalCallAsync(number, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void FindComponentsForExternalCallAsync(string number, string externalLogin, string externalPassword, object userState) {
            if ((this.FindComponentsForExternalCallOperationCompleted == null)) {
                this.FindComponentsForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindComponentsForExternalCallOperationCompleted);
            }
            this.InvokeAsync("FindComponentsForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword}, this.FindComponentsForExternalCallOperationCompleted, userState);
        }
        
        private void OnFindComponentsForExternalCallOperationCompleted(object arg) {
            if ((this.FindComponentsForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindComponentsForExternalCallCompleted(this, new FindComponentsForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetApplicationForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplicationForExternalCall(string maker, string model, string engine, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetApplicationForExternalCall", new object[] {
                        maker,
                        model,
                        engine,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationForExternalCallAsync(string maker, string model, string engine, string externalLogin, string externalPassword) {
            this.GetApplicationForExternalCallAsync(maker, model, engine, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetApplicationForExternalCallAsync(string maker, string model, string engine, string externalLogin, string externalPassword, object userState) {
            if ((this.GetApplicationForExternalCallOperationCompleted == null)) {
                this.GetApplicationForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetApplicationForExternalCall", new object[] {
                        maker,
                        model,
                        engine,
                        externalLogin,
                        externalPassword}, this.GetApplicationForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetApplicationForExternalCallOperationCompleted(object arg) {
            if ((this.GetApplicationForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationForExternalCallCompleted(this, new GetApplicationForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImagesCountForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetImagesCountForExternalCall(int crossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetImagesCountForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesCountForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword) {
            this.GetImagesCountForExternalCallAsync(crossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetImagesCountForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.GetImagesCountForExternalCallOperationCompleted == null)) {
                this.GetImagesCountForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesCountForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetImagesCountForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword}, this.GetImagesCountForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetImagesCountForExternalCallOperationCompleted(object arg) {
            if ((this.GetImagesCountForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCountForExternalCallCompleted(this, new GetImagesCountForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImagesForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImagesForExternalCall(int crossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetImagesForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword) {
            this.GetImagesForExternalCallAsync(crossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetImagesForExternalCallAsync(int crossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.GetImagesForExternalCallOperationCompleted == null)) {
                this.GetImagesForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetImagesForExternalCall", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword}, this.GetImagesForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetImagesForExternalCallOperationCompleted(object arg) {
            if ((this.GetImagesForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesForExternalCallCompleted(this, new GetImagesForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetImageByNumberForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageByNumberForExternalCall(string number, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetImageByNumberForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageByNumberForExternalCallAsync(string number, string externalLogin, string externalPassword) {
            this.GetImageByNumberForExternalCallAsync(number, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetImageByNumberForExternalCallAsync(string number, string externalLogin, string externalPassword, object userState) {
            if ((this.GetImageByNumberForExternalCallOperationCompleted == null)) {
                this.GetImageByNumberForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageByNumberForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetImageByNumberForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword}, this.GetImageByNumberForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetImageByNumberForExternalCallOperationCompleted(object arg) {
            if ((this.GetImageByNumberForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageByNumberForExternalCallCompleted(this, new GetImageByNumberForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindNumberForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindNumberForExternalCall(string number, bool only, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("FindNumberForExternalCall", new object[] {
                        number,
                        only,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindNumberForExternalCallAsync(string number, bool only, string externalLogin, string externalPassword) {
            this.FindNumberForExternalCallAsync(number, only, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void FindNumberForExternalCallAsync(string number, bool only, string externalLogin, string externalPassword, object userState) {
            if ((this.FindNumberForExternalCallOperationCompleted == null)) {
                this.FindNumberForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindNumberForExternalCallOperationCompleted);
            }
            this.InvokeAsync("FindNumberForExternalCall", new object[] {
                        number,
                        only,
                        externalLogin,
                        externalPassword}, this.FindNumberForExternalCallOperationCompleted, userState);
        }
        
        private void OnFindNumberForExternalCallOperationCompleted(object arg) {
            if ((this.FindNumberForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindNumberForExternalCallCompleted(this, new FindNumberForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/FindNumberInCrossForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindNumberInCrossForExternalCall(string number, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("FindNumberInCrossForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindNumberInCrossForExternalCallAsync(string number, string externalLogin, string externalPassword) {
            this.FindNumberInCrossForExternalCallAsync(number, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void FindNumberInCrossForExternalCallAsync(string number, string externalLogin, string externalPassword, object userState) {
            if ((this.FindNumberInCrossForExternalCallOperationCompleted == null)) {
                this.FindNumberInCrossForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindNumberInCrossForExternalCallOperationCompleted);
            }
            this.InvokeAsync("FindNumberInCrossForExternalCall", new object[] {
                        number,
                        externalLogin,
                        externalPassword}, this.FindNumberInCrossForExternalCallOperationCompleted, userState);
        }
        
        private void OnFindNumberInCrossForExternalCallOperationCompleted(object arg) {
            if ((this.FindNumberInCrossForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindNumberInCrossForExternalCallCompleted(this, new FindNumberInCrossForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetCrossCommentForExternalCall", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCrossCommentForExternalCall(int CrossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetCrossCommentForExternalCall", new object[] {
                        CrossGroupID,
                        externalLogin,
                        externalPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrossCommentForExternalCallAsync(int CrossGroupID, string externalLogin, string externalPassword) {
            this.GetCrossCommentForExternalCallAsync(CrossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetCrossCommentForExternalCallAsync(int CrossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.GetCrossCommentForExternalCallOperationCompleted == null)) {
                this.GetCrossCommentForExternalCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrossCommentForExternalCallOperationCompleted);
            }
            this.InvokeAsync("GetCrossCommentForExternalCall", new object[] {
                        CrossGroupID,
                        externalLogin,
                        externalPassword}, this.GetCrossCommentForExternalCallOperationCompleted, userState);
        }
        
        private void OnGetCrossCommentForExternalCallOperationCompleted(object arg) {
            if ((this.GetCrossCommentForExternalCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrossCommentForExternalCallCompleted(this, new GetCrossCommentForExternalCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tstarter.ru/GetExternalMNDList", RequestNamespace="http://tstarter.ru/", ResponseNamespace="http://tstarter.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExternalMNDList(int crossGroupID, string externalLogin, string externalPassword) {
            object[] results = this.Invoke("GetExternalMNDList", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalMNDListAsync(int crossGroupID, string externalLogin, string externalPassword) {
            this.GetExternalMNDListAsync(crossGroupID, externalLogin, externalPassword, null);
        }
        
        /// <remarks/>
        public void GetExternalMNDListAsync(int crossGroupID, string externalLogin, string externalPassword, object userState) {
            if ((this.GetExternalMNDListOperationCompleted == null)) {
                this.GetExternalMNDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalMNDListOperationCompleted);
            }
            this.InvokeAsync("GetExternalMNDList", new object[] {
                        crossGroupID,
                        externalLogin,
                        externalPassword}, this.GetExternalMNDListOperationCompleted, userState);
        }
        
        private void OnGetExternalMNDListOperationCompleted(object arg) {
            if ((this.GetExternalMNDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalMNDListCompleted(this, new GetExternalMNDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetUserCompletedEventHandler(object sender, SetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAccessAttributeCompletedEventHandler(object sender, GetAccessAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindNumberInCrossCompletedEventHandler(object sender, FindNumberInCrossCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindNumberInCrossCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindNumberInCrossCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindNumberCompletedEventHandler(object sender, FindNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindInGoodsRestCompletedEventHandler(object sender, FindInGoodsRestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindInGoodsRestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindInGoodsRestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindInDocStrCompletedEventHandler(object sender, FindInDocStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindInDocStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindInDocStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCartEnabledCompletedEventHandler(object sender, GetCartEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCartCompletedEventHandler(object sender, GetCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddToCartCompletedEventHandler(object sender, AddToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddToCartNewCompletedEventHandler(object sender, AddToCartNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToCartNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToCartNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteFromCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void OrderCreateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCurrencyRateCompletedEventHandler(object sender, GetCurrencyRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCurrencyCompletedEventHandler(object sender, GetCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCurrentDateCompletedEventHandler(object sender, GetCurrentDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrdersCompletedEventHandler(object sender, GetOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDaysOfReserveCompletedEventHandler(object sender, GetDaysOfReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDaysOfReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDaysOfReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBalansCompletedEventHandler(object sender, GetBalansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CalcPartnerBalanceCompletedEventHandler(object sender, CalcPartnerBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcPartnerBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcPartnerBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RestCreditCompletedEventHandler(object sender, RestCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RestDaysOfReserveCompletedEventHandler(object sender, RestDaysOfReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestDaysOfReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestDaysOfReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TempCompletedEventHandler(object sender, TempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMakerListCompletedEventHandler(object sender, GetMakerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMakerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMakerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetModelListCompletedEventHandler(object sender, GetModelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEngineListCompletedEventHandler(object sender, GetEngineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEngineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEngineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetApplicationCompletedEventHandler(object sender, GetApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindApplicationCompletedEventHandler(object sender, FindApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApplicationComponentByCrossGroupIDCompletedEventHandler(object sender, ApplicationComponentByCrossGroupIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationComponentByCrossGroupIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationComponentByCrossGroupIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindComponentsCompletedEventHandler(object sender, FindComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImagesCompletedEventHandler(object sender, GetImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImageByNumberCompletedEventHandler(object sender, GetImageByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImagesCountCompletedEventHandler(object sender, GetImagesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCrossCommentCompletedEventHandler(object sender, GetCrossCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrossCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrossCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApplicationComponentCompletedEventHandler(object sender, ApplicationComponentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetShowUnitApplicationEnabledCompletedEventHandler(object sender, GetShowUnitApplicationEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowUnitApplicationEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowUnitApplicationEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateCartCommentCompletedEventHandler(object sender, UpdateCartCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCartCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCartCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCartCommentsCompletedEventHandler(object sender, GetCartCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetOrderCommentsCompletedEventHandler(object sender, GetOrderCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateUserViewSettingsCompletedEventHandler(object sender, UpdateUserViewSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserViewSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserViewSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetForthcomingInfoCompletedEventHandler(object sender, GetForthcomingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForthcomingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForthcomingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ReserveForthcomingCompletedEventHandler(object sender, ReserveForthcomingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveForthcomingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveForthcomingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetForthcomingReserveInfoCompletedEventHandler(object sender, GetForthcomingReserveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForthcomingReserveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForthcomingReserveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteForthcomingReserveCompletedEventHandler(object sender, DeleteForthcomingReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteForthcomingReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteForthcomingReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetForOrderCompletedEventHandler(object sender, SetForOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApplicationComponentForExternalCallCompletedEventHandler(object sender, ApplicationComponentForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationComponentForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationComponentForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApplicationComponentByCrossGroupIDForExternalCallCompletedEventHandler(object sender, ApplicationComponentByCrossGroupIDForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationComponentByCrossGroupIDForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationComponentByCrossGroupIDForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMakerListForExternalCallCompletedEventHandler(object sender, GetMakerListForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMakerListForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMakerListForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetModelListForExternalCallCompletedEventHandler(object sender, GetModelListForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModelListForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModelListForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEngineListForExternalCallCompletedEventHandler(object sender, GetEngineListForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEngineListForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEngineListForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindApplicationForExternalCallCompletedEventHandler(object sender, FindApplicationForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindApplicationForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindApplicationForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindComponentsForExternalCallCompletedEventHandler(object sender, FindComponentsForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindComponentsForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindComponentsForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetApplicationForExternalCallCompletedEventHandler(object sender, GetApplicationForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImagesCountForExternalCallCompletedEventHandler(object sender, GetImagesCountForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCountForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCountForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImagesForExternalCallCompletedEventHandler(object sender, GetImagesForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetImageByNumberForExternalCallCompletedEventHandler(object sender, GetImageByNumberForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageByNumberForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageByNumberForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindNumberForExternalCallCompletedEventHandler(object sender, FindNumberForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindNumberForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindNumberForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FindNumberInCrossForExternalCallCompletedEventHandler(object sender, FindNumberInCrossForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindNumberInCrossForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindNumberInCrossForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCrossCommentForExternalCallCompletedEventHandler(object sender, GetCrossCommentForExternalCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrossCommentForExternalCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrossCommentForExternalCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetExternalMNDListCompletedEventHandler(object sender, GetExternalMNDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalMNDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalMNDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591